[uwsgi]
# 基本配置
master = true  # 启用主进程管理子进程
file-charset = utf-8  # 设置文件字符集为UTF-8
module = config.wsgi:application  # 指定WSGI模块
socket = 0.0.0.0:8000  # 监听所有IP地址的8000端口
chdir = /affect/back  # 设置工作目录
wsgi-file = config/wsgi.py  # 指定WSGI文件

# 进程和线程配置
processes = 8  # 设置8个进程以提高并发能力
threads = 4  # 每个进程使用4个线程
enable-threads = true  # 启用线程支持
thunder-lock = true  # 启用雷锁以防止惊群效应

# 超时和缓冲配置
http-timeout = 300  # HTTP请求超时时间设置为300秒
harakiri = 60  # 请求处理超时时间设置为60秒
buffer-size = 65535  # 设置缓冲区大小为65535字节
post-buffering = 4096  # POST请求缓冲区大小为4096字节
socket-timeout = 120  # 套接字超时时间设置为120秒

# 重载配置
reload-mercy = 10  # 重载时给予10秒的宽限时间
worker-reload-mercy = 10  # 工作进程重载时给予10秒的宽限时间
max-requests = 10000  # 每个工作进程处理10000个请求后重启
reload-on-rss = 2048  # 当内存使用超过2GB时自动重启

# 日志配置
log-maxsize = 50000000  # 日志文件最大为50MB
log-reopen = true  # 日志文件重新打开
logto = /var/log/uwsgi.log  # 日志文件路径
log-slow = true  # 启用慢请求日志记录
log-slower = 1000  # 记录处理时间超过1秒的请求

# 环境配置
env = DJANGO_SETTINGS_MODULE=config.settings.local  # 设置Django环境变量
vacuum = true  # 退出时清理环境
die-on-term = true  # 接收到TERM信号时优雅退出

# 自动管理
autostart = true  # 自动启动
autorestart = true  # 自动重启
redirect_stderr = true  # 重定向标准错误输出

# 性能优化
optimize = true  # 启用优化
limit-post = 65536  # 限制POST数据大小为65536字节
memory-report = true  # 启用内存使用报告
